q1:查看文件的两个版本之间的差异如何帮助你了解引入的错误？
查看是否存在拼写错误
查看是否存在无意中修改了的部分

q2:从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
过去的版本可能存在一些比较好的idea可以帮助未来的代码修改
可以回顾整个程序的编写逻辑

q3:你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
手动选择提交的优点：主动性强，如果短时间内发生多次更改，可以提交多个版本
手动提交的缺点：操作比较繁琐，需要程序员时刻注意提交
自动提交的优点：方便
自动提交的缺点：自动提交的时间间隔很难控制

q4:何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
代码编写的过程中，各个文件之间的联系非常重要

q5:如何使用命令 git log 和 git diff 来查看文件的历史记录？
git log 会显示整个文件的所有commit日志
git diff 通过传入commit id来比较不同版本之间的差异

q6:使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
通过版本控制可以让之前的版本始终保存，即便出现bug，也可以较为便捷的找到出现bug的最近版本是怎样的

q7:现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
